package templdais

type ButtonAttrs struct {
	Type    string
	Brand   string
	Figure  string
	Size    string
	Class   string
	Outline bool
	Active  bool
	Link    templ.SafeURL
}

func (btn ButtonAttrs) GetClassName() string {
	var class = "btn " + getClassName(btn.Brand, btn.Figure, btn.Size, "btn")

	if btn.Outline {
		class += " btn-outline"
	}
	if btn.Active {
		class += " btn-active"
	}

	if btn.Class != "" {
		class += " " + btn.Class
	}

	return trimSpaces(class)
}

func (btn ButtonAttrs) SetActive() ButtonAttrs {
	newBtn := ButtonAttrs{
		Type:    btn.Type,
		Brand:   btn.Brand,
		Figure:  btn.Figure,
		Size:    btn.Size,
		Outline: btn.Outline,
		Active:  true,
		Link:    btn.Link,
	}
	return newBtn
}

func (btn ButtonAttrs) SetLink(link templ.SafeURL) ButtonAttrs {
	newBtn := ButtonAttrs{
		Type:    btn.Type,
		Brand:   btn.Brand,
		Figure:  btn.Figure,
		Size:    btn.Size,
		Outline: btn.Outline,
		Active:  btn.Active,
		Link:    link,
	}

	return newBtn
}

templ Button(btn ButtonAttrs, attrs templ.Attributes) {
	switch btn.Type {
		case "button":
			<button
				{ attrs... }
				type="button"
				class={ btn.GetClassName() }
			>
				{ children... }
			</button>
		case "anchor":
			<a
			{ attrs...}
				href={ btn.Link }
				class={ btn.GetClassName() }
			>
				{ children... }
			</a>
		default:
			<button
				{ attrs... }
				type="button"
				class={ btn.GetClassName() }
			>
				{ children... }
			</button>
	}
}
