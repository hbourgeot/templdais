package templdais

import "strings"
import "fmt"

type AccordionAttrs struct {
	Items []AccordionItem
	Name	string
	Class string
}

type AccordionItem struct {
	Title     string
	Content   string
	Arrow     bool
	PlusMinus bool
	Open      bool
	Close     bool
	Class     string
}

func formatName(name string, index int) string {
	return fmt.Sprintf("%s-%d", strings.ToLower(name), index)
}

func (acc AccordionItem) GetClassName() string {
	var class = "collapse bg-base-200"
	if acc.Arrow {
		class += " collapse-arrow"
	} else if acc.PlusMinus {
		class += " collapse-plus"
	}

	if acc.Open {
		class += " collapse-open"
	} else if acc.Close {
		class += " collapse-close"
	}

	if acc.Class != "" {
		class += " " + acc.Class
	}

	return trimSpaces(class)
}

templ Accordion(acc AccordionAttrs) {
	<div class={ acc.Class }>
		for i, item := range acc.Items {
			<div
				class={ item.GetClassName() }
			>
				<input type="radio" name={ formatName(acc.Name, i) } checked="checked"/>
				<div class="collapse-title text-xl font-medium">
					{ item.Title }
				</div>
				<div class="collapse-content">
					<p>{ item.Content }</p>
				</div>
			</div>
		}
	</div>
}
