package templdais

import "strings"
import "fmt"

type AccordionAttrs struct {
	Items     []AccordionItem
	Name      string
	Class     string
	Arrow     bool
	PlusMinus bool
}

type AccordionItem struct {
	Title   string
	Content templ.Component
	Open    bool
	Close   bool
	Class   string
}

func formatName(name string, index int) string {
	return fmt.Sprintf("%s-%d", strings.ToLower(name), index)
}

func (acc AccordionItem) GetClassName() string {
	var class = "collapse bg-base-200"

	if acc.Open {
		class += " collapse-open"
	} else if acc.Close {
		class += " collapse-close"
	}

	if acc.Class != "" {
		class += " " + acc.Class
	}

	return trimSpaces(class)
}

func (acc AccordionAttrs) GetClassName() string {
	var class = "accordion"

	if acc.Arrow {
		class += " accordion-arrow"
	}

	if acc.PlusMinus {
		class += " accordion-plus-minus"
	}

	if acc.Class != "" {
		class += " " + acc.Class
	}

	return trimSpaces(class)
}

templ Accordion(acc AccordionAttrs) {
	<div class={ acc.GetClassName() }>
		for _, item := range acc.Items {
			<div
				class={ item.GetClassName() }
			>
				<input
					type="radio"
					name={ formatName(acc.Name, 1) }
					if item.Open {
						checked="checked"
					}
				/>
				<div class="collapse-title text-xl font-medium">
					{ item.Title }
				</div>
				<div class="collapse-content">
					@item.Content
				</div>
			</div>
		}
	</div>
}
